name: üöÄ Windows 11 RDP via Ngrok (Fully Stable)

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: üîß Enable RDP, Create Admin, Firewall
      shell: pwsh
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
        Enable-NetFirewallRule -DisplayGroup 'Remote Desktop'

        $user = 'runneradmin'; $pass = 'P@ssw0rd123'
        if (-not (Get-LocalUser -Name $user -ErrorAction SilentlyContinue)) {
          net user $user $pass /add
        }

        $group = [ADSI]'WinNT://./Administrators,group'
        $members = $group.psbase.Invoke('Members') | ForEach-Object {
          $_.GetType().InvokeMember('Name', 'GetProperty', $null, $_, $null)
        }
        if ($members -notcontains $user) {
          $group.Add("WinNT://./$user,user")
        }

    - name: üîΩ Download Ngrok
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip" -OutFile "$env:USERPROFILE\ngrok.zip"
        Expand-Archive -Path "$env:USERPROFILE\ngrok.zip" -DestinationPath "$env:USERPROFILE\ngrok"

    - name: üîê Set Ngrok Authtoken
      shell: pwsh
      run: |
        & "$env:USERPROFILE\ngrok\ngrok.exe" authtoken "${{ secrets.NGROK_AUTH_TOKEN }}"

    - name: üöÄ Launch Ngrok TCP Tunnel
      shell: pwsh
      run: |
        Start-Process -FilePath "$env:USERPROFILE\ngrok\ngrok.exe" -ArgumentList "tcp 3389" -WindowStyle Hidden
        Start-Sleep -Seconds 10

    - name: üåê Retrieve Ngrok Tunnel Info
      id: ngrok
      shell: pwsh
      run: |
        $maxRetries = 60
        $retryDelay = 5
        $success = $false
        $url = ""

        for ($i = 1; $i -le $maxRetries; $i++) {
          if (-not (Get-Process ngrok -ErrorAction SilentlyContinue)) {
            Write-Host "üîÑ Ngrok process not running. Restarting..."
            Start-Process -FilePath "$env:USERPROFILE\ngrok\ngrok.exe" -ArgumentList "tcp 3389" -WindowStyle Hidden
            Start-Sleep -Seconds 5
            continue
          }

          try {
            $response = Invoke-RestMethod -Uri "http://127.0.0.1:4040/api/tunnels" -TimeoutSec 3
            if ($response.tunnels.Count -gt 0) {
              $url = $response.tunnels[0].public_url -replace "tcp://", ""
              $parts = $url -split ":"
              if ((Test-NetConnection $parts[0] -Port ([int]$parts[1])).TcpTestSucceeded) {
                $success = $true
                echo "::set-output name=rdp::$url"
                Write-Host "‚úÖ RDP tunnel established: $url"
                break
              }
            }
          } catch {
            Write-Host "‚è≥ Retry $i/$maxRetries... Ngrok not ready."
          }

          Start-Sleep -Seconds $retryDelay
        }

        if (-not $success) {
          throw "‚ùå Ngrok failed to provide a working TCP tunnel after $($maxRetries * $retryDelay) seconds."
        }

    - name: üñ•Ô∏è Display RDP Credentials
      shell: pwsh
      run: |
        Write-Host "üì° RDP Address: ${{ steps.ngrok.outputs.rdp }}"
        Write-Host "üë§ Username: runneradmin"
        Write-Host "üîê Password: P@ssw0rd123"

    - name: üß© Install Chrome / VS Code / Python / Java
      shell: pwsh
      run: |
        # Chrome
        Invoke-WebRequest "https://dl.google.com/chrome/install/latest/chrome_installer.exe" -OutFile "$env:TEMP\chrome.exe"
        Start-Process "$env:TEMP\chrome.exe" -ArgumentList "/silent /install" -Wait

        # VS Code
        Invoke-WebRequest "https://update.code.visualstudio.com/latest/win32-x64-user/stable" -OutFile "$env:TEMP\vscode.exe"
        Start-Process "$env:TEMP\vscode.exe" -ArgumentList "/silent" -Wait

        # Python
        Invoke-WebRequest "https://www.python.org/ftp/python/3.12.2/python-3.12.2-amd64.exe" -OutFile "$env:TEMP\python.exe"
        Start-Process "$env:TEMP\python.exe" -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1" -Wait

        # Java
        Invoke-WebRequest "https://github.com/adoptium/temurin17-binaries/releases/latest/download/OpenJDK17U-jdk_x64_windows_hotspot_latest.msi" -OutFile "$env:TEMP\java.msi"
        Start-Process msiexec.exe -ArgumentList "/i `"$env:TEMP\java.msi`" /quiet" -Wait

    - name: üß† Keep session alive (6 hours)
      shell: pwsh
      run: |
        for ($i = 0; $i -lt 360; $i++) {
          if (-not (Get-Process ngrok -ErrorAction SilentlyContinue)) {
            Write-Host "‚ùå Ngrok process died. Terminating RDP."
            exit 1
          }
          Write-Host "üïí RDP Active: $i minutes elapsed"
          Start-Sleep -Seconds 60
        }
