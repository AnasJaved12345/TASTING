name: üöÄ Windows RDP via Ngrok (Full Stability, 6 Hours)

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: üîß Enable RDP, create admin user & open firewall
      shell: pwsh
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0
        Enable-NetFirewallRule -DisplayGroup 'Remote Desktop'

        $user = 'runneradmin'; $pass = 'P@ssw0rd123'
        if (-not (Get-LocalUser -Name $user -ErrorAction SilentlyContinue)) {
          cmd /c "net user $user $pass /add"
        }
        $grp = [ADSI]'WinNT://./Administrators,group'
        $members = $grp.Invoke('Members') | ForEach-Object { $_.GetType().InvokeMember('Name','GetProperty',$null,$_,$null) }
        if ($members -notcontains $user) {
          $grp.Add("WinNT://./$user,user")
        }

    - name: üß© Download Ngrok
      shell: pwsh
      run: |
        $zip ="$env:USERPROFILE\ngrok.zip"; $dir="$env:USERPROFILE\ngrok"
        Invoke-WebRequest "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip" -OutFile $zip
        Expand-Archive $zip -DestinationPath $dir

    - name: üîê Authenticate Ngrok
      shell: pwsh
      run: |
        & "$env:USERPROFILE\ngrok\ngrok.exe" authtoken "${{ secrets.NGROK_AUTH_TOKEN }}"

    - name: üöÄ Launch Ngrok tunnel
      shell: pwsh
      run: |
        Start-Process -FilePath "$env:USERPROFILE\ngrok\ngrok.exe" -ArgumentList 'tcp 3389' -WindowStyle Hidden
        Start-Sleep -Seconds 10

    - name: üåê Wait for Ngrok & Validate RDP Connectivity
      id: ngrok
      shell: pwsh
      run: |
        $max=60; $delay=5; $url=''; $succeeded=$false
        for ($i=1; $i -le $max; $i++) {
          if (-not (Get-Process ngrok -ErrorAction SilentlyContinue)) {
            Write-Host "‚ö†Ô∏è Ngrok process died‚Äîrestarting..."
            Start-Process -FilePath "$env:USERPROFILE\ngrok\ngrok.exe" -ArgumentList 'tcp 3389' -WindowStyle Hidden
            Start-Sleep -Seconds 5
            continue
          }
          try {
             $t = Invoke-RestMethod -Uri 'http://127.0.0.1:4040/api/tunnels' -TimeoutSec 3
             if ($t.tunnels.Count -gt 0) {
               $url = $t.tunnels[0].public_url -replace 'tcp://',''
               $parts = $url -split ':'
               if (Test-NetConnection $parts[0] -Port ([int]$parts[1])).TcpTestSucceeded {
                 $succeeded = $true
                 echo "::set-output name=rdp::$url"
                 Write-Host "‚úÖ Ngrok and RDP reachable: $url"
                 break
               }
             }
          } catch {
             Write-Host "Retry $i/$max: tunnel not live"
          }
          Start-Sleep -Seconds $delay
        }
        if (-not $succeeded) { throw "Ngrok/RDP unreachable after $($max*$delay) seconds." }

    - name: üñ•Ô∏è Print RDP Info
      shell: pwsh
      run: |
        Write-Host "üì° RDP Address: ${{ steps.ngrok.outputs.rdp }}"
        Write-Host "üë§ Username: runneradmin" 
        Write-Host "üîê Password: P@ssw0rd123"

    - name: üíª Install Chrome, VS Code, Python 3.12, Java 17
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://dl.google.com/chrome/install/latest/chrome_installer.exe" -OutFile "$env:TEMP\chrome.exe"
        Start-Process "$env:TEMP\chrome.exe" -ArgumentList "/silent /install" -Wait
        Invoke-WebRequest "https://update.code.visualstudio.com/latest/win32-x64-user/stable" -OutFile "$env:TEMP\vscode.exe"
        Start-Process "$env:TEMP\vscode.exe" -ArgumentList "/silent" -Wait
        Invoke-WebRequest "https://www.python.org/ftp/python/3.12.2/python-3.12.2-amd64.exe" -OutFile "$env:TEMP\python.exe"
        Start-Process "$env:TEMP\python.exe" -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1" -Wait
        Invoke-WebRequest "https://github.com/adoptium/temurin17-binaries/releases/latest/download/OpenJDK17U-jdk_x64_windows_hotspot_latest.msi" -OutFile "$env:TEMP\java.msi"
        Start-Process msiexec.exe -ArgumentList "/i `"$env:TEMP\java.msi`" /quiet" -Wait

    - name: üß† Keep Session Alive (6h checkpoint)
      shell: pwsh
      run: |
        while (Get-Date -lt (Get-Date).AddHours(6)) {
          if (-not (Get-Process ngrok -ErrorAction SilentlyContinue)) {
            Write-Host "‚ùå Ngrok died mid-session. Terminating workflow."
            exit 1
          }
          Start-Sleep -Seconds 300
        }
