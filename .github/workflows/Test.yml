name: üñ•Ô∏è Free RDP with Dev Tools (Chrome, VSCode, Python, Java)

on:
  workflow_dispatch:

jobs:
  RDP-Setup:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: üîß Enable RDP + Create Admin User
      shell: pwsh
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

        $username = "runneradmin"
        $password = "P@ssw0rd123"
        if (-not (Get-LocalUser -Name $username -ErrorAction SilentlyContinue)) {
          net user $username $password /add
        }

        $group = [ADSI]"WinNT://./Administrators,group"
        $memberPath = "WinNT://./$username,user"
        if (-not ($group.psbase.Invoke("Members") | ForEach-Object { $_.GetType().InvokeMember("Name", 'GetProperty', $null, $_, $null) } | Where-Object { $_ -eq $username })) {
          $group.Add($memberPath)
        }

    - name: üì¶ Download and Setup Ngrok
      shell: pwsh
      run: |
        $ngrokPath = "$env:USERPROFILE\ngrok"
        $ngrokZip = "$env:USERPROFILE\ngrok.zip"
        Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip" -OutFile $ngrokZip
        Expand-Archive $ngrokZip -DestinationPath $ngrokPath

    - name: üîê Authenticate Ngrok
      shell: pwsh
      run: |
        & "$env:USERPROFILE\ngrok\ngrok.exe" authtoken "${{ secrets.NGROK_AUTH_TOKEN }}"

    - name: üöÄ Start Ngrok Tunnel
      shell: pwsh
      run: |
        Start-Process -NoNewWindow -FilePath "$env:USERPROFILE\ngrok\ngrok.exe" -ArgumentList "tcp 3389"
        Start-Sleep -Seconds 10

    - name: üåê Fetch Ngrok TCP Endpoint
      id: ngrok
      shell: pwsh
      run: |
        $maxRetries = 30
        $retryDelay = 5
        $tunnel = $null
        for ($i = 1; $i -le $maxRetries; $i++) {
          try {
            $response = Invoke-RestMethod -Uri "http://127.0.0.1:4040/api/tunnels"
            $tunnel = $response.tunnels[0].public_url
            break
          } catch {
            Write-Host ("‚è≥ Attempt {0}/{1}: Retrying..." -f $i, $maxRetries)
            Start-Sleep -Seconds $retryDelay
          }
        }
        if (-not $tunnel) {
          throw "‚ùå Ngrok tunnel failed."
        }
        $rdp = $tunnel -replace "tcp://", ""
        echo "::set-output name=rdp::$rdp"

    - name: üñ•Ô∏è Show RDP Login Info
      shell: pwsh
      run: |
        echo "üì° Address: ${{ steps.ngrok.outputs.rdp }}"
        echo "üë§ Username: runneradmin"
        echo "üîê Password: P@ssw0rd123"

    - name: üåç Install Google Chrome
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://dl.google.com/chrome/install/latest/chrome_installer.exe" -OutFile "$env:TEMP\chrome.exe"
        Start-Process "$env:TEMP\chrome.exe" -ArgumentList "/silent /install" -Wait

    - name: üß† Install Visual Studio Code
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://code.visualstudio.com/sha/download?build=stable&os=win32-x64-user" -OutFile "$env:TEMP\vscode.exe"
        Start-Process "$env:TEMP\vscode.exe" -ArgumentList "/silent /mergetasks=!runcode" -Wait

    - name: üêç Install Python 3.12
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://www.python.org/ftp/python/3.12.2/python-3.12.2-amd64.exe" -OutFile "$env:TEMP\python.exe"
        Start-Process "$env:TEMP\python.exe" -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1 Include_test=0" -Wait

    - name: ‚òï Install Java JDK 17
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://download.oracle.com/java/17/latest/jdk-17_windows-x64_bin.exe" -OutFile "$env:TEMP\jdk.exe"
        Start-Process "$env:TEMP\jdk.exe" -ArgumentList "/s" -Wait

    - name: üïí Keep Session Alive (6 Hours)
      shell: pwsh
      run: |
        for ($i = 0; $i -lt 360; $i++) {
          Write-Host "üïí $i minutes elapsed..."
          Start-Sleep -Seconds 60
        }
